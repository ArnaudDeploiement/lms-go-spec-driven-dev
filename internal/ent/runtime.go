// Code generated by ent, DO NOT EDIT.

package ent

import (
	"lms-go/internal/ent/content"
	"lms-go/internal/ent/course"
	"lms-go/internal/ent/module"
	"lms-go/internal/ent/organization"
	"lms-go/internal/ent/schema"
	"lms-go/internal/ent/user"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	contentFields := schema.Content{}.Fields()
	_ = contentFields
	// contentDescName is the schema descriptor for name field.
	contentDescName := contentFields[2].Descriptor()
	// content.NameValidator is a validator for the "name" field. It is called by the builders before save.
	content.NameValidator = contentDescName.Validators[0].(func(string) error)
	// contentDescMimeType is the schema descriptor for mime_type field.
	contentDescMimeType := contentFields[3].Descriptor()
	// content.MimeTypeValidator is a validator for the "mime_type" field. It is called by the builders before save.
	content.MimeTypeValidator = contentDescMimeType.Validators[0].(func(string) error)
	// contentDescStorageKey is the schema descriptor for storage_key field.
	contentDescStorageKey := contentFields[5].Descriptor()
	// content.StorageKeyValidator is a validator for the "storage_key" field. It is called by the builders before save.
	content.StorageKeyValidator = contentDescStorageKey.Validators[0].(func(string) error)
	// contentDescStatus is the schema descriptor for status field.
	contentDescStatus := contentFields[6].Descriptor()
	// content.DefaultStatus holds the default value on creation for the status field.
	content.DefaultStatus = contentDescStatus.Default.(string)
	// contentDescMetadata is the schema descriptor for metadata field.
	contentDescMetadata := contentFields[7].Descriptor()
	// content.DefaultMetadata holds the default value on creation for the metadata field.
	content.DefaultMetadata = contentDescMetadata.Default.(map[string]interface{})
	// contentDescCreatedAt is the schema descriptor for created_at field.
	contentDescCreatedAt := contentFields[8].Descriptor()
	// content.DefaultCreatedAt holds the default value on creation for the created_at field.
	content.DefaultCreatedAt = contentDescCreatedAt.Default.(func() time.Time)
	// contentDescUpdatedAt is the schema descriptor for updated_at field.
	contentDescUpdatedAt := contentFields[9].Descriptor()
	// content.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	content.DefaultUpdatedAt = contentDescUpdatedAt.Default.(func() time.Time)
	// content.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	content.UpdateDefaultUpdatedAt = contentDescUpdatedAt.UpdateDefault.(func() time.Time)
	// contentDescID is the schema descriptor for id field.
	contentDescID := contentFields[0].Descriptor()
	// content.DefaultID holds the default value on creation for the id field.
	content.DefaultID = contentDescID.Default.(func() uuid.UUID)
	courseFields := schema.Course{}.Fields()
	_ = courseFields
	// courseDescTitle is the schema descriptor for title field.
	courseDescTitle := courseFields[2].Descriptor()
	// course.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	course.TitleValidator = courseDescTitle.Validators[0].(func(string) error)
	// courseDescSlug is the schema descriptor for slug field.
	courseDescSlug := courseFields[3].Descriptor()
	// course.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	course.SlugValidator = courseDescSlug.Validators[0].(func(string) error)
	// courseDescStatus is the schema descriptor for status field.
	courseDescStatus := courseFields[5].Descriptor()
	// course.DefaultStatus holds the default value on creation for the status field.
	course.DefaultStatus = courseDescStatus.Default.(string)
	// courseDescVersion is the schema descriptor for version field.
	courseDescVersion := courseFields[6].Descriptor()
	// course.DefaultVersion holds the default value on creation for the version field.
	course.DefaultVersion = courseDescVersion.Default.(int)
	// courseDescMetadata is the schema descriptor for metadata field.
	courseDescMetadata := courseFields[7].Descriptor()
	// course.DefaultMetadata holds the default value on creation for the metadata field.
	course.DefaultMetadata = courseDescMetadata.Default.(map[string]interface{})
	// courseDescCreatedAt is the schema descriptor for created_at field.
	courseDescCreatedAt := courseFields[9].Descriptor()
	// course.DefaultCreatedAt holds the default value on creation for the created_at field.
	course.DefaultCreatedAt = courseDescCreatedAt.Default.(func() time.Time)
	// courseDescUpdatedAt is the schema descriptor for updated_at field.
	courseDescUpdatedAt := courseFields[10].Descriptor()
	// course.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	course.DefaultUpdatedAt = courseDescUpdatedAt.Default.(func() time.Time)
	// course.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	course.UpdateDefaultUpdatedAt = courseDescUpdatedAt.UpdateDefault.(func() time.Time)
	// courseDescID is the schema descriptor for id field.
	courseDescID := courseFields[0].Descriptor()
	// course.DefaultID holds the default value on creation for the id field.
	course.DefaultID = courseDescID.Default.(func() uuid.UUID)
	moduleFields := schema.Module{}.Fields()
	_ = moduleFields
	// moduleDescTitle is the schema descriptor for title field.
	moduleDescTitle := moduleFields[3].Descriptor()
	// module.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	module.TitleValidator = moduleDescTitle.Validators[0].(func(string) error)
	// moduleDescModuleType is the schema descriptor for module_type field.
	moduleDescModuleType := moduleFields[4].Descriptor()
	// module.ModuleTypeValidator is a validator for the "module_type" field. It is called by the builders before save.
	module.ModuleTypeValidator = moduleDescModuleType.Validators[0].(func(string) error)
	// moduleDescPosition is the schema descriptor for position field.
	moduleDescPosition := moduleFields[5].Descriptor()
	// module.DefaultPosition holds the default value on creation for the position field.
	module.DefaultPosition = moduleDescPosition.Default.(int)
	// moduleDescStatus is the schema descriptor for status field.
	moduleDescStatus := moduleFields[7].Descriptor()
	// module.DefaultStatus holds the default value on creation for the status field.
	module.DefaultStatus = moduleDescStatus.Default.(string)
	// moduleDescData is the schema descriptor for data field.
	moduleDescData := moduleFields[8].Descriptor()
	// module.DefaultData holds the default value on creation for the data field.
	module.DefaultData = moduleDescData.Default.(map[string]interface{})
	// moduleDescCreatedAt is the schema descriptor for created_at field.
	moduleDescCreatedAt := moduleFields[9].Descriptor()
	// module.DefaultCreatedAt holds the default value on creation for the created_at field.
	module.DefaultCreatedAt = moduleDescCreatedAt.Default.(func() time.Time)
	// moduleDescUpdatedAt is the schema descriptor for updated_at field.
	moduleDescUpdatedAt := moduleFields[10].Descriptor()
	// module.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	module.DefaultUpdatedAt = moduleDescUpdatedAt.Default.(func() time.Time)
	// module.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	module.UpdateDefaultUpdatedAt = moduleDescUpdatedAt.UpdateDefault.(func() time.Time)
	// moduleDescID is the schema descriptor for id field.
	moduleDescID := moduleFields[0].Descriptor()
	// module.DefaultID holds the default value on creation for the id field.
	module.DefaultID = moduleDescID.Default.(func() uuid.UUID)
	organizationFields := schema.Organization{}.Fields()
	_ = organizationFields
	// organizationDescName is the schema descriptor for name field.
	organizationDescName := organizationFields[1].Descriptor()
	// organization.NameValidator is a validator for the "name" field. It is called by the builders before save.
	organization.NameValidator = organizationDescName.Validators[0].(func(string) error)
	// organizationDescSlug is the schema descriptor for slug field.
	organizationDescSlug := organizationFields[2].Descriptor()
	// organization.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	organization.SlugValidator = organizationDescSlug.Validators[0].(func(string) error)
	// organizationDescStatus is the schema descriptor for status field.
	organizationDescStatus := organizationFields[3].Descriptor()
	// organization.DefaultStatus holds the default value on creation for the status field.
	organization.DefaultStatus = organizationDescStatus.Default.(string)
	// organization.StatusValidator is a validator for the "status" field. It is called by the builders before save.
	organization.StatusValidator = organizationDescStatus.Validators[0].(func(string) error)
	// organizationDescSettings is the schema descriptor for settings field.
	organizationDescSettings := organizationFields[4].Descriptor()
	// organization.DefaultSettings holds the default value on creation for the settings field.
	organization.DefaultSettings = organizationDescSettings.Default.(map[string]interface{})
	// organizationDescCreatedAt is the schema descriptor for created_at field.
	organizationDescCreatedAt := organizationFields[5].Descriptor()
	// organization.DefaultCreatedAt holds the default value on creation for the created_at field.
	organization.DefaultCreatedAt = organizationDescCreatedAt.Default.(func() time.Time)
	// organizationDescUpdatedAt is the schema descriptor for updated_at field.
	organizationDescUpdatedAt := organizationFields[6].Descriptor()
	// organization.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organization.DefaultUpdatedAt = organizationDescUpdatedAt.Default.(func() time.Time)
	// organization.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organization.UpdateDefaultUpdatedAt = organizationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationDescID is the schema descriptor for id field.
	organizationDescID := organizationFields[0].Descriptor()
	// organization.DefaultID holds the default value on creation for the id field.
	organization.DefaultID = organizationDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[2].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPasswordHash is the schema descriptor for password_hash field.
	userDescPasswordHash := userFields[3].Descriptor()
	// user.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	user.PasswordHashValidator = userDescPasswordHash.Validators[0].(func(string) error)
	// userDescRole is the schema descriptor for role field.
	userDescRole := userFields[4].Descriptor()
	// user.DefaultRole holds the default value on creation for the role field.
	user.DefaultRole = userDescRole.Default.(string)
	// userDescStatus is the schema descriptor for status field.
	userDescStatus := userFields[5].Descriptor()
	// user.DefaultStatus holds the default value on creation for the status field.
	user.DefaultStatus = userDescStatus.Default.(string)
	// userDescMetadata is the schema descriptor for metadata field.
	userDescMetadata := userFields[8].Descriptor()
	// user.DefaultMetadata holds the default value on creation for the metadata field.
	user.DefaultMetadata = userDescMetadata.Default.(map[string]interface{})
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[9].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[10].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
