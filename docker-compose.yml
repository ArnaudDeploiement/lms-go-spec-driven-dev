services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:${API_PORT:-8080}
      NEXT_API_PROXY_TARGET: ${NEXT_API_PROXY_TARGET:-http://api:8080}
    ports:
      - "${WEB_PORT:-3000}:3000"
    depends_on:
      - api

  api:
    build:
      context: .
      dockerfile: build/docker/api/Dockerfile
    env_file:
      - .env
    environment:
      API_ADDR: ${API_ADDR:-:8080}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
      JWT_SECRET: ${JWT_SECRET}
      ACCESS_TOKEN_TTL: ${ACCESS_TOKEN_TTL:-15m}
      REFRESH_TOKEN_TTL: ${REFRESH_TOKEN_TTL:-72h}
      REDIS_ADDR: redis:6379
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET:-lms-go}
      MINIO_USE_SSL: ${MINIO_USE_SSL:-false}
      MINIO_PUBLIC_ENDPOINT: ${MINIO_PUBLIC_ENDPOINT:-http://localhost:${MINIO_API_PORT:-9000}}
    ports:
      - "${API_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started

  worker:
    build:
      context: .
      dockerfile: build/docker/worker/Dockerfile
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
      JWT_SECRET: ${JWT_SECRET}
      ACCESS_TOKEN_TTL: ${ACCESS_TOKEN_TTL:-15m}
      REFRESH_TOKEN_TTL: ${REFRESH_TOKEN_TTL:-72h}
      REDIS_ADDR: redis:6379
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET:-lms-go}
      MINIO_USE_SSL: ${MINIO_USE_SSL:-false}
      MINIO_PUBLIC_ENDPOINT: ${MINIO_PUBLIC_ENDPOINT:-http://localhost:${MINIO_API_PORT:-9000}}
    depends_on:
      - api
      - postgres

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"

  minio:
    image: quay.io/minio/minio:RELEASE.2024-05-10T01-41-38Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_SERVER_URL: ${MINIO_PUBLIC_ENDPOINT:-http://localhost:${MINIO_API_PORT:-9000}}
      MINIO_BROWSER_REDIRECT_URL: ${MINIO_PUBLIC_CONSOLE_ENDPOINT:-http://localhost:${MINIO_CONSOLE_PORT:-9001}}
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio-data:/data

volumes:
  postgres-data:
  minio-data:
